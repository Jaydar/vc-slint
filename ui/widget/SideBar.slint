// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import { StyleMetrics , VerticalBox} from "std-widgets.slint";

component SideBarItem inherits Rectangle {
    in property <bool> selected;
    in property <bool> has-focus;
    in-out property <string> text <=> label.text;

    callback clicked <=> touch.clicked;

    min-height: l.preferred-height;

    states [
        pressed when touch.pressed : {
            state.opacity: 0.8;
        }
        hover when touch.has-hover : {
            state.opacity: 0.6;
        }
        selected when root.selected : {
            state.opacity: 1;
        }
        focused when root.has-focus : {
            state.opacity: 0.8;
        }
    ]

    state := Rectangle {
        opacity: 0;
        background: StyleMetrics.window-background;

        animate opacity { duration: 150ms; }
    }

    l := HorizontalLayout {
        y: (parent.height - self.height) / 2;
        padding: StyleMetrics.layout-padding;
        spacing: 0px;

        label := Text {
            color: StyleMetrics.default-text-color;
            
            vertical-alignment: center;
         }
    }

    touch := TouchArea {
        width: 100%;
        height: 100%;
    }
}

export component SideBar inherits Rectangle {
    in property <[string]> model: [];
    in property <string> title <=> label.text;
    out property <int> current-item: 0;
    in-out property <bool> isShow;
    
    x:0;
    y:0;
    padding: 0px;
    width: 100%;
    visible: true;

    opacity: 1;

    TouchArea {
        width: 100%;
        height: 100%;
        // height:100%; width: 100%;
        clicked => { root.visible = false; }
    }

    Rectangle{
        x:0;
        y:0;
        width: 180px;
        Rectangle {
            background: StyleMetrics.window-background.darker(0.2);
        }
        
    
        VerticalLayout {
            spacing: StyleMetrics.layout-spacing;
            alignment: start;
    
            label := Text {
                font-size: 16px;
                font-weight: 700;
                height: 50px;
                horizontal-alignment: center;
                vertical-alignment:center;
            }
    
            navigation := VerticalLayout {
                alignment: start;
                vertical-stretch: 0;
                for item[index] in root.model : SideBarItem {
                    clicked => { root.current-item = index; }
                    text: item;
                }
            }
        }
    }


    
}
